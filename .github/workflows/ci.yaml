name: CI

on:
  push:
    # Run on the main branch
    branches:
      - main
      - release/*
  # Also on PRs, just be careful not to publish anything
  pull_request:
  # Allow to be called from other workflows (like "release")
  workflow_call:
  # But don't trigger on tags, as they are covered by the "release.yaml" workflow

jobs:

  fmt:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - uses: webiny/action-conventional-commits@8bc41ff4e7d423d56fa4905f6ff79209a78776c7

      - name: Check formatting
        run: |
          cargo fmt --check

  test:

    strategy:
      matrix:

        rust:
          - stable
          - "1.74" # MSRV

        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

        include:
          - os: ubuntu-latest
            install: |
              sudo apt install -y libssl-dev
          - os: windows-latest
            install: |
              echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
              vcpkg install openssl:x64-windows-static-md

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        if: runner.os == 'Windows'
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');
            core.exportVariable('VCPKG_BINARY_SOURCES', 'clear;x-gha,readwrite');

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-check-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}

      - name: Disable rustup auto update
        run: |
          rustup set auto-self-update disable

      - name: Install Rust ${{ matrix.rust }}
        run: |
          rustup install ${{ matrix.rust }}

      - name: Install dependencies
        run: ${{ matrix.install }}

      - name: Check
        run: cargo +${{ matrix.rust }} check --workspace ${{ matrix.args }}

      - name: Clippy
        run: cargo +${{ matrix.rust }} clippy --all-targets --tests --bins --all -- -D warnings

      - name: Test
        run: cargo +${{ matrix.rust }} test --workspace ${{ matrix.args }} -- --nocapture
